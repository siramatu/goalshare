{
  "author": {
    "name": "Oleksandr Knyga",
    "email": "oleksandrknyga@gmail.com"
  },
  "name": "light-orm",
  "description": "Super simple ORM node.js wrapper for relational databases. It does not depends on any specific driver, so you can connect to mysql, ms server and so on... Try it!",
  "version": "0.1.4",
  "homepage": "https://github.com/knyga/light-orm",
  "repository": {
    "type": "git",
    "url": "https://github.com/knyga/light-orm"
  },
  "main": "./index",
  "engines": {
    "node": "*"
  },
  "devDependencies": {},
  "optionalDependencies": {},
  "bugs": {
    "url": "https://github.com/knyga/light-orm/issues"
  },
  "dependencies": {},
  "directories": {
    "example": "example"
  },
  "scripts": {
    "test": "echo \"Look for example\" && exit 1"
  },
  "keywords": [
    "orm",
    "mysql",
    "simple",
    "postgresql",
    "sql",
    "server",
    "ms",
    "server",
    "database",
    "db",
    "wrapper",
    "pdo",
    "propel",
    "mongodb",
    "oracle",
    "microsoft",
    "relational",
    "relational",
    "database",
    "management",
    "system",
    "rdbms",
    "ibm",
    "db2",
    "ibm",
    "informix",
    "my",
    "sql",
    "object",
    "model",
    "collection",
    "entity",
    "framework",
    "connector",
    "light",
    "typescript",
    "odm",
    "postgres",
    "redshift",
    "sqlite",
    "mongodb"
  ],
  "license": "Apache License, Version 2.0",
  "readme": "##Light-orm\r\nLight-orm - simple ORM node.js wrapper for relational databases. It does not depends on any specific driver, so you can connect to mysql, postgresql, ms server with your favorite driver.\r\n\r\nYour db connector (or wrapper) just should implement the interface:\r\n```\r\ninterface DriverInterface {\r\n    query(query: string, handler: (err, rows, fields) => void);\r\n}\r\n```\r\nThis interface came from node-mysql driver, as most popular option, that lets you avoid writting your wrappers to connectors.\r\n\r\nLight-orm gives you freedom in choising your own driver. You should not any more make meet half-way between high driver performance with native realization and ORM wrapper.\r\n\r\n###Installation\r\n`npm install light-orm`\r\n\r\n###Development\r\nLight-orm is written on typescript. Look for the sources here: lib/typescript and lib/compiler. You may find there comments in jsdoc style.\r\n\r\n###Examples\r\nExample connection (mysql):\r\n```javascript\r\nvar mysql = require('mysql'),\r\n\tlightOrm = require('light-orm');\r\n\r\nlightOrm.driver = mysql.createConnection(require('./connection.json'));\r\nlightOrm.driver.connect();\r\n```\r\n\r\nCreate collection for table name `author`:\r\n```javascript\r\nvar AuthorCollection = new lightOrm.Collection('author');\r\n```\r\n\r\nFind one model:\r\n```javascript\r\nAuthorCollection.findOne({\r\n\tid: 1\r\n}, function(err, model) {\r\n\tconsole.log(model.getAll());\r\n\t//{ id: 1, name: 'James Bond', description: 'Agent 007' }\r\n});\r\n```\r\n\r\nFind one model by sql:\r\n```javascript\r\nAuthorCollection.findOne(\"SELECT * FROM `author` WHERE id = 1\", function(err, model) {\r\n\tconsole.log(model.getAll());\r\n\t//{ id: 1, name: 'James Bond', description: 'Agent 007' }\r\n});\r\n```\r\n\r\nFind models:\r\n```javascript\r\nCarCollection.find({\r\n\tcategory_id: 5\r\n}, function(err, models) {});\r\n```\r\n\r\nFind models by sql:\r\n```javascript\r\nCarCollection.find({\r\n\tcategory_id: 5\r\n}, function(err, models) {});\r\n```\r\n\r\nGet all attributes:\r\n```javascript\r\nmodel.getAll();\r\n```\r\n\r\nGet one attribute:\r\n```javascript\r\nmodel.get('name');\r\n```\r\n\r\nSet attribute:\r\n```javascript\r\nmodel.set('name', 'Oleksandr Knyga');\r\n```\r\n\r\nSet attributes:\r\n```javascript\r\nmodel.set({\r\n\tname: 'Oleksandr Knyga'\r\n});\r\n```\r\n\r\nCheck attribute:\r\n```javascript\r\nmodel.has('name');\r\n```\r\n\r\nClear attributes:\r\n```javascript\r\nmodel.clear();\r\n```\r\n\r\nClear one attribute:\r\n```javascript\r\nmodel.clear('name');\r\n```\r\n\r\nGet custom row by sql:\r\n```javascript\r\nAuthorCollection.findOne(\"SELECT COUNT(*) as `count` FROM `author` WHERE name = '\" + author.name + \"'\", function(err, data) {\r\n\tvar count = data.get('count');\r\n});\r\n```\r\n\r\nSave:\r\n```javascript\r\nmodel.create(function(err, model) {});\r\n```\r\n\r\nUpdate:\r\n```javascript\r\nmodel.update(function(err, model) {});\r\n```\r\n\r\nUpdate, with custom where block:\r\n```javascript\r\nmodel.update({\r\n\tpkValue: {\r\n\t\tid: 31\r\n\t}\r\n}, function(err, model) {});\r\n```\r\n\r\nUpdate, manual pk field name:\r\n```javascript\r\nmodel.update({\r\n\t\tpk: ['id']\r\n}, function(err, model) {});\r\n```\r\n\r\nDelete:\r\n```javascript\r\nmodel.remove(function(err, model) {});\r\n```\r\n\r\nDelete, with custom where block:\r\n```javascript\r\nmodel.remove({\r\n\tpkValue: {\r\n\t\tid: 31\r\n\t}\r\n}, function(err, model) {});\r\n```\r\n\r\nDelete, manual pk field name:\r\n```javascript\r\nmodel.remove({\r\n\t\tpk: ['id']\r\n}, function(err, model) {});\r\n```\r\n\r\nIf you do not want to have model in callback, add `false` as last argument to remove, update, create. Like this:\r\n```javascript\r\nmodel.update({\r\n\tpkValue: {\r\n\t\tid: 31\r\n\t}\r\n}, function(err, model) {}, false);\r\n```\r\n\r\n###Licence\r\nCopyright 2014 Oleksandr Knyga <oleksandrknyga@gmail.com>\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n",
  "readmeFilename": "README.md",
  "_id": "light-orm@0.1.4",
  "dist": {
    "shasum": "f4cbe6d0c66ec7328f9c2229b71db673dcb695a3"
  },
  "_from": "light-orm@*",
  "_resolved": "https://registry.npmjs.org/light-orm/-/light-orm-0.1.4.tgz"
}
